#----------------------------#
#------- Class 3 ------------#
#----------------------------#
# set working directory 
setwd('C:/Users/spanport/Desktop/Spring20/R') # run with Ctrl + Enter
library(tidyverse)  # ggplot2, dplyr, tidyr, readr, purr, tiblle, stringr, forcats

# Tarea
library(ggplot2)
my_scatter = function(x, y){
  df = data.frame(x, y)
  plot1 = ggplot(data = df, aes(x, y)) + 
            geom_point()
  return(plot1)
}

x = c(1, 3, 4,5, 8)
y = c(40, 20, 18,10, 8)
my_scatter(x, y)

# Hoy veremos:
# 1: dplyr, Data Transformation
#   - Select, filter, mutate
# 2: Estadistica: summarise, group_by

# get data 
df1 = read_delim('aresty_dataframe_v1.csv', delim = ',')
View(df1)
df1

# 1: dplyr, Data Transformation selecciona datos, crear, etc
# select: Select/rename variables by name
df1 %>% # voy a seleccionar algo en una base de datos se tiene que run juntas
  select(parent_score_mono)

df1 %>% # selecciona lo que yo quiera
  select(item, condition, besasp, parent_score_mono)

df1 %>% #todo menos esa 
  select(-item)
df1 %>% #todo menos esa 
  select(-item, -condition)

# filter: Return rows with matching conditions laas condiciones son: == (es igual) , >=, <=, != (distinto)
df1 %>%
  filter(condition == 'first')
df1 %>%
  filter(condition !='first')
df1 %>%
  filter(condition == 'first', parent_score_mono >= 3)

df1 %>%
  filter(condition == 'first') %>%
  select(parent_score_mono) 

df1 %>%
  filter(condition == 'second') %>%
  select(parent_score_mono) 

# mutate: Create or transform variables
df1 %>%
  mutate(new_score = parent_score_mono / parent_score_bi) 

df1 %>%
  mutate(condition2 = ifelse(condition == 'first', 1, 0)) 

# 2: Estadistica: summarise, group_by
# count: Count/tally observations by group (obs es rows)
# Q: contar el numero de muestras de la base
df1 %>%
  count()

# Q: cual es el numero de observaciones de first condition, y con un  parent_score_mono mayor o igual a 3
df1 %>%
  filter(condition == 'first', parent_score_mono >= 3) %>%
  count()

# Q: obtener la media, desviacion estandar, y numero de observaciones de parent_score_mono, cuando condition es igual a second
df1 %>%
  filter(condition == 'second') %>%
  summarise(media = mean(parent_score_mono), de = sd(parent_score_mono), n = n())

# group_by: Group by one or more variables (solo con variable categorica gender)

# Q: contar el numbero de labels de la variable condition
df1 %>%
  group_by(condition) %>%
  count()

# obtener la media, desviacion estandar, y numero de observaciones de parent_score_mono, por cada nivel de la variable condition
df1 %>%
  group_by(condition) %>%
  summarise(media = mean(parent_score_mono), de = sd(parent_score_mono), n = n())


# graficar la relacion entre dos variables
my_scatter(x = df1$parent_score_bi, y = df1$parent_score_mono)


df1 %>%
  group_by(besasp) %>%
  summarise(media = mean(parent_score_mono), de = sd(parent_score_mono), n = n())
df1 %>%
  group_by(besasp) %>%
  summarise(media = mean(parent_score_bi), de = sd(parent_score_bi), n = n())
# regresion : lo que intento predecir es una variable numerica y = numerica 
# cuando y es discreta (categorico) el modelo puede ser logit 

mylogit = glm(besasp ~ parent_score_mono, data = df1, family = "binomial")
summary(mylogit)
